name: Release [Build wheels]

on:
  release:
    types:
      - created

jobs:
  build_wheels:
    name: Build and test wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: # CIBW wheel tests need the right runner arch, so we use separate runners for macos
        os: [ ubuntu-latest, macos-latest, macos-12 ]

    steps:
      - uses: actions/checkout@v4

      - name: Install gfortran
        uses: fortran-lang/setup-fortran@v1
        if: ${{ matrix.os != 'ubuntu-latest' }}
        id: setup-fortran
        with:
          compiler: gcc
          version: 13

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CC: ${{ matrix.os == 'ubuntu-latest' && 'gcc-13' || 'clang' }}  # believe it or not, this is a ternary operator
          FC: ${{ matrix.os == 'ubuntu-latest' && 'gcc-13' || 'gfortran' }}
          CIBW_BEFORE_ALL_LINUX: "yum install -y lapack-devel blas-devel"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: ${{ matrix.os == 'macos-latest' && 'arm64' || 'x86_64' }}
          CIBW_SKIP: "*-musllinux*"
          CIBW_BUILD: "cp310-* cp311-* cp312-*"
          CIBW_BUILD_FRONTEND: "build"
          CIBW_TEST_REQUIRES: pytest~=6.2.2
          CIBW_TEST_COMMAND: pytest {project}/tests

        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - name: Upload wheels to artifact
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  publish_to_pypi:
    name: Publish to pypi
    needs: build_wheels
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v3
        with:
          path: wheelhouse

      - name: Move wheels to dist folder
        run: |
          mkdir dist
          for w in `find wheelhouse/ -type f -name "*.whl"` ; do cp $w dist/ ; done

      - name: Publish wheels
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          verbose: true
          repository-url: https://test.pypi.org/legacy/
